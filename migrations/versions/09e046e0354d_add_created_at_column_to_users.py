"""Add created_at column to users

Revision ID: 09e046e0354d
Revises: 
Create Date: 2024-10-09 18:44:39.357627

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = '09e046e0354d'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('Flask_SQLAlchemy_Users_Data', schema=None) as batch_op:
        batch_op.drop_index('ix_Flask_SQLAlchemy_Users_Data_email')
        batch_op.drop_index('ix_Flask_SQLAlchemy_Users_Data_username')

    op.drop_table('Flask_SQLAlchemy_Users_Data')
    
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('about_user', sa.String(length=500), nullable=True))
        batch_op.alter_column('username',
               existing_type=mysql.VARCHAR(length=50),
               type_=sa.String(length=80),
               existing_nullable=False)
        batch_op.alter_column('email',
               existing_type=mysql.VARCHAR(length=100),
               type_=sa.String(length=120),
               existing_nullable=False)
        batch_op.create_unique_constraint(None, ['username'])
        batch_op.create_unique_constraint(None, ['email'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')
        batch_op.drop_constraint(None, type_='unique')
        batch_op.alter_column('email',
               existing_type=sa.String(length=120),
               type_=mysql.VARCHAR(length=100),
               existing_nullable=False)
        batch_op.alter_column('username',
               existing_type=sa.String(length=80),
               type_=mysql.VARCHAR(length=50),
               existing_nullable=False)
        batch_op.drop_column('about_user')
    # ### end Alembic commands ###

    op.create_table('Flask_SQLAlchemy_Users_Data',
    sa.Column('id', mysql.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('username', mysql.VARCHAR(length=255), nullable=False),
    sa.Column('email', mysql.VARCHAR(length=255), nullable=False),
    sa.Column('bio', mysql.TEXT(), nullable=True),
    sa.Column('admin', mysql.TINYINT(display_width=1), autoincrement=False, nullable=False),
    sa.Column('created_at', mysql.DATETIME(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('updated_at', mysql.DATETIME(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_0900_ai_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    with op.batch_alter_table('Flask_SQLAlchemy_Users_Data', schema=None) as batch_op:
        batch_op.create_index('ix_Flask_SQLAlchemy_Users_Data_username', ['username'], unique=True)
        batch_op.create_index('ix_Flask_SQLAlchemy_Users_Data_email', ['email'], unique=True)

    # ### end Alembic commands ###

